name: ci-build
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  ANDROID_NDK_VERSION: r28b
  ANDROID_API_LEVEL: 35
  CARGO_NDK_VERSION: 4.2.2

jobs:
  release-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup system dependencies
        run: |
          sudo apt update
          sudo apt install -y gcc-multilib zip unzip wget

      - name: Cache Android NDK
        id: cache-ndk
        uses: actions/cache@v3
        with:
          path: ~/android-ndk-${{ env.ANDROID_NDK_VERSION }}
          key: ndk-${{ env.ANDROID_NDK_VERSION }}-linux

      - name: Download Android NDK
        if: steps.cache-ndk.outputs.cache-hit != 'true'
        run: |
          wget -O ndk.zip https://dl.google.com/android/repository/android-ndk-${{ env.ANDROID_NDK_VERSION }}-linux.zip -nv
          unzip -q ndk.zip -d ~/

      - name: Setup NDK environment
        run: |
          echo "ANDROID_NDK_HOME=~/android-ndk-${{ env.ANDROID_NDK_VERSION }}" >> $GITHUB_ENV
          echo "ANDROID_NDK_ROOT=~/android-ndk-${{ env.ANDROID_NDK_VERSION }}" >> $GITHUB_ENV
          echo "$HOME/android-ndk-${{ env.ANDROID_NDK_VERSION }}/toolchains/llvm/prebuilt/linux-x86_64/bin" >> $GITHUB_PATH

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: aarch64-linux-android,armv7-linux-androideabi,x86_64-linux-android,i686-linux-android
          components: rust-src

      - name: Install cargo-ndk
        run: |
          cargo install cargo-ndk --version ${{ env.CARGO_NDK_VERSION }} --locked

      - name: Clean previous builds
        run: |
          cargo clean
          rm -rf output
          rm -f Cargo.lock

      - name: Build with make.py
        run: |
          python3 ./make.py build --release --nightly -v

      - name: Prepare artifacts
        run: |
          mkdir -p output/artifact/release
          unzip "output/PJZ110_sampling_controller_release_*.zip" -d output/artifact/release

      - name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: pjz110_sampling_controller(release)
          compression-level: 9
          path: output/artifact/release
          retention-days: 7
